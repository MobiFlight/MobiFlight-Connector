name: RunTests

on:
  workflow_dispatch:
  pull_request:
    branches: [main]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: MobiFlightConnector.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  BUILD_PLATFORM: x86
  BUILD_PROJECT: MobiFlightUnitTests
  VERSION: "0.0.${{ github.event.number }}.${{ github.run_number }}"

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name: Add VSTest to Path
      uses: darenm/Setup-VSTest@v1

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Replace version in AssemblyInfo.cs
      run: (Get-Content "Properties/AssemblyInfo.cs") -replace '\("\d+\.\d+\.\d+(\.\d+)?"\)', '("${{ env.VERSION }}")' | Out-File "Properties/AssemblyInfo.cs"
      shell: pwsh
      
    - name: Dump AssemblyInfo.cs
      run: 'type Properties/AssemblyInfo.cs'
      shell: pwsh

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}} /t:${{env.BUILD_PROJECT}} ${{env.SOLUTION_FILE_PATH}} 
      
    - name: Run Tests
      run: vstest.console.exe MobiFlightUnitTests/bin/Release/MobiFlightUnitTests.dll

    - name: store latest setup file
      uses: actions/upload-artifact@v3
      with:
        name: MobiFlightConnector
        path: |
          Release/MobiFlightConnector-${{ env.VERSION }}.zip
